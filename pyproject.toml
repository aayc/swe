[project]
name = "swe"
version = "0.1.0"
description = "A software engineering agent engineer"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "typer>=0.12.0",
    "rich>=13.0.0",
    "google-generativeai>=0.8.0",
    "aiofiles>=24.0.0",
]

[project.scripts]
swe = "swe.cli:cli"

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "aiohttp>=3.8.0",
    "anthropic>=0.25.0",
    "openai>=1.0.0",
    "pyyaml>=6.0.0",
    "types-aiofiles>=24.0.0",
]

[tool.ruff]
select = ["E", "F", "I", "N", "UP", "B", "A", "C4", "T20"]
ignore = ["T201", "B904"]
fixable = ["ALL"]
unfixable = []
line-length = 160
target-version = "py310"
exclude = ["gym/"]

[tool.ruff.per-file-ignores]
"tests/*" = ["D"]
"gym/*" = ["ALL"]

[tool.black]
line-length = 160
target-version = ["py310"]
exclude = "gym/"

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
exclude = ["gym/", "src/.*/test_.*\\.py$", ".*/tests/.*\\.py$"]

[[tool.mypy.overrides]]
module = "*"
ignore_missing_imports = true
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = ["gym.*"]
ignore_errors = true


[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["src", "gym/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.hatch.build.targets.wheel]
packages = ["src/swe"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.0",
    "ruff>=0.12.0",
]
